[{"name":"브라우저 / CS","variant":"Browser&CS","subCategory":[{"id":1,"title":"github에서 파일을 fetch할 수 있을까?","category":"Browser&CS","path":"github에서-파일을-fetch할-수-있을까","date":"2022년 3월 4일","content":"\n> ### CORS\n>\n> 전부 변수를 선언할때 사용하는 키워드입니다. 키워드란 자바스크립트 코드를 해석하고 실행하는 엔진이 수행할 동작을 규정한 일종의 명령어입니다.\n> 자바스크립트 엔진은 키워드를 만나면 자신이 수행해야 할 약속된 동작을 수행합니다.\n\n블로그를 작성 방법에 대한 여러 가지 고민을 .github repository 네트워크 요청을 보내서 저장된 파일을 가져 올 수 있을까요?\n클라이언트 사이드에서는 서버에서 모든 오리진, 메소드 요청, 헤더 등을 \n\n여기서 CORS에 대한 개념이 등장을 합니다. CORS는 ...입니다 ...를 위해 만들어진 것이죠. \n\n<a href=\"https://google.com\">CLICK ME</a>\n\n<img src=\"public/images/test.png\" alt=\"code\" />\n\n_THIS WILL BE CHANGED_\n\n<h1>CLICK</h1>\n\n```javascript\nvar happy;\nconsole.log(happy); // undefined\n```\n\n```javascript\nconst test = num => {\n  console.log('test')\n  console.log('test')\n  console.log('test')\n  console.log('test') // undefined\n};\n```\n"},{"id":2,"title":"HTTP의 비연결성 무상태","category":"Browser&CS","path":"HTTP의-비연결성-무상태","date":"2022년 3월 4일","content":"\n# HTTP의 가장 큰 특징인 비연결성과 무상태\n\n### 비연결성\n\n서버는 이 순간에도 수많은 클라이언트와 http 통신을 주고 받고 있습니다. 만약 서버에서 다수의 클라이언트와 연결을 계속 유지한다면 이에 따른 엄청난 리소스가 들 뿐더러 이를 받쳐 줄 천문학적인 리소스를 유지할 수도 없을 것입니다. 따라서 http에서 비연결성이란 특징은 클라이언트와 서버가 http 요청과 응답을 주고 받은 후 맺었던 연결을 끊어 버리는 성질을 말합니다.\n\n하지만 서버는 클라이언트를 식별할 수 없기 때문에 동일한 클라이언트의 모든 http 요청에 대해 매번 연결을 맺고 끊는 작업을 거쳐야하므로 처리 시간 및 메모리 등이 추가적으로 사용됩니다.\n\n### 무상태\n\nhttp 특징인 비연결성 때문에 서버는 클라이언트의 이전 상태를 보존하지 않는데 이를 무상태(stateless)라고 합니다. 그런데 클라이언트가 서버와 연결이 끊겨도 기억하고 사람 간 대화를 할때 문맥이 존재하듯 서버가 클라이언트와 요청과 응답을 통해 소통을 하려면 stateful 상태를 유지해야합니다. 이를테면 해당 클라이언트가 과거 웹사이트에 방문을 했었는지, 로그인 상태에서 사이트가 제공하는 사용자 경험을 누리기 위해서는 서버가 최소한의 상태를 유지해야합니다. 일반적으로는 브라우저 <a href=\"\" target=\"_blank\" rel=\"noreferrer\"> 쿠키와 웹스토리지 등을 사용하여 상태를 유지합니다. </a>\n"},{"id":3,"title":"변수","category":"Browser&CS","path":"변수","date":"2022년 3월 4일","content":"\n> ### var, let, const는 뭔가요?\n>\n> 전부 변수를 선언할때 사용하는 키워드입니다. 키워드란 자바스크립트 코드를 해석하고 실행하는 엔진이 수행할 동작을 규정한 일종의 명령어입니다.\n> 자바스크립트 엔진은 키워드를 만나면 자신이 수행해야 할 약속된 동작을 수행합니다.\n\n<a href=\"https://google.com\">CLICK ME</a>\n\n<img src=\"public/images/test.png\" alt=\"code\" />\n\n_THIS WILL BE CHANGED_\n\n<h1>CLICK</h1>\n\n```javascript\nvar happy;\nconsole.log(happy); // undefined\n```\n\n```javascript\nconst test = num => {\n  console.log('test')\n  console.log('test')\n  console.log('test')\n  console.log('test') // undefined\n};\n```\n"}]},{"name":"자바스크립트","variant":"Javascript","subCategory":[{"id":4,"title":"이벤트 루프","category":"Javascript","path":"이벤트-루프","date":"2022년 4월 1일","content":"\n# 이벤트 루프\n\n변수는 하나의 값을 저장하기 위해 확보한 메모리 공간 자체 또는 그 메모리 공간을 식별하기 위해 붙인 이름을 말한다.\n\n> ### **변수의 선언이란?**&nbsp;\n>[변수](www.google.com)의 선언이란 변수를 생성하는 것을 말한다. 구체적으로 하나의 값을 저장하기 위해 메모리 공간 자체를 확보하고 변수 이름과 메모리 공간의 주소를 연결해 값을 저장하는 것이다.\n>\n> 변수를 사용하려면 선언을 반드시 해야하고 선언할 때는 var, let, const 키워드를 사용한다.\n\n> ### var, let, const는 뭔가요?\n>\n> 전부 변수를 선언할때 사용하는 키워드입니다. 키워드란 자바스크립트 코드를 해석하고 실행하는 엔진이 수행할 동작을 규정한 일종의 명령어입니다.\n> 자바스크립트 엔진은 키워드를 만나면 자신이 수행해야 할 약속된 동작을 수행합니다.\n\n\nvar는 다음과 같은 특징이 있습니다.\n\n- 변수 중복 선언 허용\n- 함수 레벨 스코프\n- 변수 호이스팅\n\n```javascript\nvar happy;\nconsole.log(happy); // undefined\n```\n\n# 변수\n\n변수는 하나의 값을 저장하기 위해 확보한 메모리 공간 자체 또는 그 메모리 공간을 식별하기 위해 붙인 이름을 말한다.\n\n> ### **변수의 선언이란?**\n> [변수](www.google.com)의 선언이란 변수를 생성하는 것을 말한다. 구체적으로 하나의 값을 저장하기 위해 메모리 공간 자체를 확보하고 변수 이름과 메모리 공간의 주소를 연결해 값을 저장하는 것이다.\n> 변수를 사용하려면 선언을 반드시 해야하고 선언할 때는 var, let, const 키워드를 사용한다.\n\n> ### var, let, const는 뭔가요?\n>\n> 전부 변수를 선언할때 사용하는 키워드입니다. 키워드란 자바스크립트 코드를 해석하고 실행하는 엔진이 수행할 동작을 규정한 일종의 명령어입니다.\n> 자바스크립트 엔진은 키워드를 만나면 자신이 수행해야 할 약속된 동작을 수행합니다.\n\nvar는 다음과 같은 특징이 있습니다.\n\n- 변수 중복 선언 허용\n- 함수 레벨 스코프\n- 변수 호이스팅\n\n```javascript\nvar happy;\nconsole.log(happy); // undefined\n```\n"},{"id":5,"title":"Promise","category":"Javascript","path":"Promise","date":"2022년 4월 1일","content":"\n# 변수\n\n변수는 하나의 값을 저장하기 위해 확보한 메모리 공간 자체 또는 그 메모리 공간을 식별하기 위해 붙인 이름을 말한다.\n\n> ### **변수의 선언이란?**&nbsp;\n>[변수](www.google.com)의 선언이란 변수를 생성하는 것을 말한다. 구체적으로 하나의 값을 저장하기 위해 메모리 공간 자체를 확보하고 변수 이름과 메모리 공간의 주소를 연결해 값을 저장하는 것이다.\n>\n> 변수를 사용하려면 선언을 반드시 해야하고 선언할 때는 var, let, const 키워드를 사용한다.\n\n> ### var, let, const는 뭔가요?\n>\n> 전부 변수를 선언할때 사용하는 키워드입니다. 키워드란 자바스크립트 코드를 해석하고 실행하는 엔진이 수행할 동작을 규정한 일종의 명령어입니다.\n> 자바스크립트 엔진은 키워드를 만나면 자신이 수행해야 할 약속된 동작을 수행합니다.\n\n\nvar는 다음과 같은 특징이 있습니다.\n\n- 변수 중복 선언 허용\n- 함수 레벨 스코프\n- 변수 호이스팅\n\n```javascript\nvar happy;\nconsole.log(happy); // undefined\n```\n\n# 변수\n\n변수는 하나의 값을 저장하기 위해 확보한 메모리 공간 자체 또는 그 메모리 공간을 식별하기 위해 붙인 이름을 말한다.\n\n> ### **변수의 선언이란?**\n> [변수](www.google.com)의 선언이란 변수를 생성하는 것을 말한다. 구체적으로 하나의 값을 저장하기 위해 메모리 공간 자체를 확보하고 변수 이름과 메모리 공간의 주소를 연결해 값을 저장하는 것이다.\n> 변수를 사용하려면 선언을 반드시 해야하고 선언할 때는 var, let, const 키워드를 사용한다.\n\n> ### var, let, const는 뭔가요?\n>\n> 전부 변수를 선언할때 사용하는 키워드입니다. 키워드란 자바스크립트 코드를 해석하고 실행하는 엔진이 수행할 동작을 규정한 일종의 명령어입니다.\n> 자바스크립트 엔진은 키워드를 만나면 자신이 수행해야 할 약속된 동작을 수행합니다.\n\nvar는 다음과 같은 특징이 있습니다.\n\n- 변수 중복 선언 허용\n- 함수 레벨 스코프\n- 변수 호이스팅\n\n```javascript\nvar happy;\nconsole.log(happy); // undefined\n```\n"},{"id":6,"title":"JS TEST","category":"Javascript","path":"JS-TEST","date":"2022년 3월 4일","content":"\n> ### CORS\n>\n> 전부 변수를 선언할때 사용하는 키워드입니다. 키워드란 자바스크립트 코드를 해석하고 실행하는 엔진이 수행할 동작을 규정한 일종의 명령어입니다.\n> 자바스크립트 엔진은 키워드를 만나면 자신이 수행해야 할 약속된 동작을 수행합니다.\n\n블로그를 작성 방법에 대한 여러 가지 고민을 .github repository 네트워크 요청을 보내서 저장된 파일을 가져 올 수 있을까요?\n클라이언트 사이드에서는 서버에서 모든 오리진, 메소드 요청, 헤더 등을 \n\n여기서 CORS에 대한 개념이 등장을 합니다. CORS는 ...입니다 ...를 위해 만들어진 것이죠. \n\n<a href=\"https://google.com\">CLICK ME</a>\n\n<img src=\"public/images/test.png\" alt=\"code\" />\n\n_THIS WILL BE CHANGED_\n\n<h1>CLICK</h1>\n\n```javascript\nvar happy;\nconsole.log(happy); // undefined\n```\n\n```javascript\nconst test = num => {\n  console.log('test')\n  console.log('test')\n  console.log('test')\n  console.log('test') // undefined\n};\n```\n"},{"id":7,"title":"한글 URI가 깨져서 나와요 decodeURI()","category":"Javascript","path":"한글-URI가-깨져서-나와요-decodeURI()","date":"2022년 6월 26일","content":"\n> ### 한글 uri가 깨져서 나와요 decodeURI()\n\n간혹 브라우저 uri에 **%20**가 포함된 경우를 보셨을겁니다. 브라우저는 문자간 공백문자를 인코딩하는 과정에서 치환합니다.\n\nuri값을 사용하거나 인코딩된 uri를 한글로 다시 디코딩해야하는 경우가 있습니다.\n\n**decodeURI()**는 encodeURI 또는 비슷한 루틴으로 생성된 uri를 디코딩 해줍니다.\n\n```javascript\nconst uri = 'https://somesite.com/리액트';\nconst encoded = encodeURI(uri);\nconsole.log(encoded);\n// expected output: \"https://somesite.com/%EB%A6%AC%EC%95%A1%ED%8A%B8\"\nconsole.log(window.location.pathname)\n// expected output: \"https://somesite.com/%EB%A6%AC%EC%95%A1%ED%8A%B8\"\n\ntry {\n  console.log(decodeURI(encoded));\n  // expected output: \"https://somesite.com/리액트\"\n} catch (e) {\n  console.error(e);\n}\n```\n\nwindow객체나 훅으로 uri나 리소스에 접근하실때 사용해보면 되겠습니다."}]},{"name":"리액트","variant":"React","subCategory":[{"id":8,"title":"TEST","category":"React","path":"TEST","date":"2022년 3월 4일","content":"\n> ### var, let, const는 뭔가요?\n>\n> 전부 변수를 선언할때 사용하는 키워드입니다. 키워드란 자바스크립트 코드를 해석하고 실행하는 엔진이 수행할 동작을 규정한 일종의 명령어입니다.\n> 자바스크립트 엔진은 키워드를 만나면 자신이 수행해야 할 약속된 동작을 수행합니다.\n\n<a href=\"https://google.com\">CLICK ME</a>\n\n<img src=\"public/images/test.png\" alt=\"code\" />\n\n_THIS WILL BE CHANGED_\n\n<h1>CLICK</h1>\n\n```javascript\nvar happy;\nconsole.log(happy); // undefined\n```\n\n```javascript\nconst test = num => {\n  console.log('test')\n  console.log('test')\n  console.log('test')\n  console.log('test') // undefined\n};\n```\n"},{"id":9,"title":"REACT TEST","category":"React","path":"REACT-TEST","date":"2022년 3월 4일","content":"\n> ### var, let, const는 뭔가요?\n>\n> 전부 변수를 선언할때 사용하는 키워드입니다. 키워드란 자바스크립트 코드를 해석하고 실행하는 엔진이 수행할 동작을 규정한 일종의 명령어입니다.\n> 자바스크립트 엔진은 키워드를 만나면 자신이 수행해야 할 약속된 동작을 수행합니다.\n\n<a href=\"https://google.com\">CLICK ME</a>\n\n<img src=\"public/images/test.png\" alt=\"code\" />\n\n_THIS WILL BE CHANGED_\n\n<h1>CLICK</h1>\n\n```javascript\nvar happy;\nconsole.log(happy); // undefined\n```\n\n```javascript\nconst test = num => {\n  console.log('test')\n  console.log('test')\n  console.log('test')\n  console.log('test') // undefined\n};\n```\n"}]}]